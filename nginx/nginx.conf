user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
	worker_connections  1024;
}

http {
	include       /etc/nginx/mime.types;
	default_type  application/octet-stream;

	sendfile        on;
	tcp_nopush      on;
	tcp_nodelay     on;
	keepalive_timeout  65;
	types_hash_max_size 4096;

	server_tokens off;
	client_max_body_size 10m;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
					  '$status $body_bytes_sent "$http_referer" '
					  '"$http_user_agent" "$http_x_forwarded_for"';

	access_log  /var/log/nginx/access.log  main;

	upstream backend_service {
		server backend:8000;
	}

	server {
		listen 80;
		server_name _;

		return 301 https://$host$request_uri;
	}

	server {
		listen 443 ssl http2;
		server_name _;

		ssl_certificate     /etc/nginx/certs/server.crt;
		ssl_certificate_key /etc/nginx/certs/server.key;
		ssl_protocols       TLSv1.2 TLSv1.3;
		ssl_prefer_server_ciphers on;
		ssl_session_cache   shared:SSL:10m;
		ssl_session_timeout 10m;

		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
		add_header X-Content-Type-Options nosniff;
		add_header X-Frame-Options SAMEORIGIN;
		add_header X-XSS-Protection "1; mode=block";

		auth_basic           "News Aggregator";
		auth_basic_user_file /etc/nginx/conf.d/.htpasswd;

		root   /usr/share/nginx/html;
		index  index.html;

		# Путь для автоматического обновления сертификатов (Let's Encrypt)
		location ^~ /.well-known/acme-challenge/ {
			auth_basic off;
			allow all;
			try_files $uri =404;
		}

		location / {
			try_files $uri $uri/ /index.html;
		}

		location /api/ {
			proxy_pass              http://backend_service;
			proxy_set_header        Host $host;
			proxy_set_header        X-Real-IP $remote_addr;
			proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header        X-Forwarded-Proto $scheme;
			proxy_read_timeout      60s;
		}

		location /docs/ {
			proxy_pass         http://backend_service;
			proxy_set_header   Host $host;
			proxy_set_header   X-Real-IP $remote_addr;
			proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header   X-Forwarded-Proto $scheme;
		}

		location /openapi.json {
			proxy_pass         http://backend_service;
			proxy_set_header   Host $host;
			proxy_set_header   X-Real-IP $remote_addr;
			proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header   X-Forwarded-Proto $scheme;
		}

		location /healthz {
			proxy_pass         http://backend_service/health;
			proxy_set_header   Host $host;
		}
	}
}

